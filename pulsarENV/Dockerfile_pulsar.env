# Copyright (C) 2016 by Ewan Barr
# Licensed under the Academic Free License version 3.0
# This program comes with ABSOLUTELY NO WARRANTY.
# You are free to modify and redistribute this code as long
# as you do not remove the above attribution and reasonably
# inform receipients that you have modified the original work.

#FROM ubuntu:xenial-20160923.1
# Now change to ubuntu 18.04
#FROM ubuntu:bionic-20200311
#FROM ubuntu:18.04
FROM nvidia/cuda:10.1-devel-ubuntu18.04


MAINTAINER Chenchen Miao "miaocc@nao.cas.cn" 

# Suppress debconf warnings
ENV DEBIAN_FRONTEND noninteractive

# Switch account to root and adding user accounts and password
USER root
RUN echo "root:root" | chpasswd && \
    mkdir -p /root/.ssh 

# Create psr user which will be used to run commands with reduced privileges.
RUN adduser --disabled-password --gecos 'unprivileged user' psr && \
    echo "psr:psr" | chpasswd && \
    mkdir -p /home/psr/.ssh && \
    chown -R psr:psr /home/psr/.ssh

# Create space for ssh daemon and update the system
#echo 'deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse' >> /etc/apt/sources.list && \
COPY source.list /etc/apt/sourcetuna.list 
RUN mkdir /var/run/sshd && \
    echo 'deb mirror://mirrors.ubuntu.com/mirrors.txt trusty main multiverse' >> /etc/apt/sources.list && \
    cat /etc/apt/sourcetuna.list >> /etc/apt/source.list && \
    apt-get -y check && \
    apt-get -y update --fix-missing && \
    apt-get -y update && \
    apt-get -y upgrade 

# Install dependencies
#RUN apt-get -y update --fix-missing
RUN apt-get update && apt-get install -y apt-transport-https apt-utils

# Install dependencies
RUN apt-get --no-install-recommends -y install \
    build-essential \
    autoconf \
    autotools-dev \
    automake \
    pkg-config \
    libtool \
    libsysfs-dev \
    g++-6 \
    gcc-6 \
    gfortran-6 \
    csh \
    wget \
    git \
    libcfitsio-dev \
    pgplot5 \
    swig2.0 \    
    python \
    python-dev \
    python-pip \
    python-tk  \
    libfftw3-3 \
    libfftw3-bin \
    libfftw3-dev \
    libfftw3-single3 \
    libx11-dev \
    libpng-dev \
    libpnglite-dev \
    libglib2.0-0 \
    libglib2.0-dev \
    libgtk3.0-cil-dev \
    gir1.2-gtk-3.0 \
    python-gobject \
    openssh-server \
    libgomp1 \
    openmpi-bin \
    openmpi-common \
    openmpi-doc \
    libpomp-dev \
    libopenmpi-dev \
    libiomp-dev \
    libiomp-doc \
    libiomp5 \
    libiomp5-dbg \
    xorg \
    imagemagick \
    vim \
    latex2html \
    libblas-dev \                                 
    libgsl-dev \                                  
    libatlas-base-dev \
    liblapack-dev \
    libtmglib-dev && \
    rm -rf /var/lib/apt/lists/* 

#RUN apt-get install -y parallel

RUN apt-get -y clean

# set gcc g++ and gfortran
RUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 50 && \
    update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-6 50 && \
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 50 

############################################3
#run from file
# Install python packages
ENV PIP_FIND_LINKS https://pypi.tuna.tsinghua.edu.cn/simple
RUN pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pip -U 
RUN pip install -i https://pypi.tuna.tsinghua.edu.cn/simple setuptools -U
COPY pythonENV.txt /home/pythonENV.txt
COPY modulePy /home/modulePy
#RUN pip install -i https://pypi.tuna.tsinghua.edu.cn/simple -r /home/pythonENV.txt
RUN pip install -i https://pypi.tuna.tsinghua.edu.cn/simple -r /home/pythonENV.txt --find-links=/home/modulePy && \
    rm -rf /home/modulePy
############################################3


USER psr

# Define home, psrhome, OSTYPE and create the directory
ENV HOME /home/psr
ENV PSRHOME $HOME/software
ENV OSTYPE linux
RUN mkdir -p $PSRHOME
WORKDIR $PSRHOME

# Pull all repos
RUN wget http://www.atnf.csiro.au/people/pulsar/psrcat/downloads/psrcat_pkg.tar.gz && \
    tar -xvf psrcat_pkg.tar.gz -C $PSRHOME && \
    wget https://www.imcce.fr/content/medias/recherche/equipes/asd/calceph/calceph-3.1.0.tar.gz && \
    tar -xvf calceph-3.1.0.tar.gz -C $PSRHOME && \
    git clone git://git.code.sf.net/p/tempo/tempo && \
    git clone git://git.code.sf.net/p/psrchive/code psrchive && \
    git clone https://bitbucket.org/psrsoft/tempo2.git tempo2Install && \ 
    git clone https://github.com/straten/epsic.git && \
    git clone https://git.code.sf.net/p/dspsr/code dspsr_build && \
    wget https://github.com/scottransom/presto/archive/v3.0.1.tar.gz -O presto-v3.0.1.tar.gz && \ 
    tar -xvf presto-v3.0.1.tar.gz -C $PSRHOME

COPY sshd_config /etc/ssh/sshd_config
USER root
EXPOSE 22
CMD ["/usr/sbin/sshd", "-D"]
ENV DISPLAY :0
